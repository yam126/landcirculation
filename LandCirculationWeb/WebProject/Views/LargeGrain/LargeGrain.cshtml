@{
    Layout = "~/Views/Shared/_AdminTemplate.cshtml";
    string CurrentPage = (string)ViewData["CurrentPage"];
    string LandId = (string)ViewData["LandId"];
}
@section Head {
    <script type="text/javascript" src="~/js/dateTimeFromat.js"></script>
    <script type="text/javascript" src="~/js/CompanyInfo.js"></script>
    <script type="text/javascript" src="~/js/json.js"></script>
    <script type="text/javascript" src="~/js/video.js"></script>
    <script type="text/javascript" src="~/js/videojs-contrib-hls.js"></script>
    <script type="text/javascript" src="~/js/LargeGrain.js"></script>
    <link rel="stylesheet" href="~/css/CompanyMaster.css" />
    <link rel="stylesheet" href="~/css/video-js.css" />
    <link rel="stylesheet" href="~/css/LargeGrain.css" />
}
@section PageBody {
     <el-row style="width:98%;margin:0 auto;" class="page-cont search-container">
        <el-col :span="24" class="page-cont">
            <div class="alarm-header">
                <el-button style="float:left" icon="el-icon-caret-left" @@click="gotoNewHome" type="success" round>返回首页</el-button>
                <div style="float:left;margin-left:0.5vw" class="site-header-input">
                    <el-input v-model="searchWhere" placeholder="搜索种粮大户姓名/家庭地址/身份证号/联系电话" stlye="width:300px"></el-input>
                    <input type="hidden" id="landId" value="@LandId" />
                </div>
                <div class="searchLabel">
                    种植面积
                </div>
                <div style="float:left;margin-left:0.5vw" class="ddlFilterCriteria">
                    <el-select v-model="ddlFilterCriteriaSelectedStartValue" placeholder="条件">
                        <el-option
                               v-for="item in ddlFilterCriteriaOptions"
                               :key="item.value"
                               :label="item.label"
                               :value="item.value">
                        </el-option>
                    </el-select>
                </div>
                <div class="txtPlantingArea">
                    <el-input v-model="searchPlantingAreaStart" placeholder="数值开始" ></el-input>
                </div>
                <div style="float:left;margin-left:0.5vw" class="ddlFilterCriteria">
                    <el-select v-model="ddlFilterCriteriaSelectedEndValue" placeholder="条件">
                        <el-option
                               v-for="item in ddlFilterCriteriaOptions"
                               :key="item.value"
                               :label="item.label"
                               :value="item.value">
                        </el-option>
                    </el-select>
                </div>
                <div class="txtPlantingArea">
                    <el-input v-model="searchPlantingAreaEnd" placeholder="数值结束" ></el-input>
                </div>
                <div class="ddlSelectedYear">
                    <el-select v-model="ddlSelectedYearSelectedValue" placeholder="年份选择">
                        <el-option
                               v-for="item in ddlSelectedYearOptions"
                               :key="item.value"
                               :label="item.label"
                               :value="item.value">
                        </el-option>
                    </el-select>                
                </div>
                <el-button style="float:left;margin-left:0.5vw" @@click="search" class="el-button-sm" >搜索</el-button>
                <el-button style="float:left;margin-left:0.5vw" @@click="showEditDialog" class="el-button-sm" >添加</el-button>
                <el-button style="float:left;margin-left:0.5vw" @@click="selectedDelete" class="el-button-sm el-button--danger" >删除</el-button>
                <el-button style="float:left;margin-left:0.5vw" @@click="importExcel" class="el-button-sm" >导入Excel</el-button>
                <el-button style="float:left;margin-left:0.5vw" @@click="exportExcel" class="el-button-sm" >导出Excel</el-button>
                <a style="float:left;margin-left:0.5vw;margin-top:0.6vh" href="/template/landCirculationTemplate.xls" title="下载导入模板">下载导入模板</a>
                <input type="file" id="uploadExcel" style="display:none" />
            </div>
       </el-col>
    </el-row>
    <el-row style="width:98%;margin:0 auto;overflow:hidden;height:70vh;" class="page-cont search-result-container">
        <el-table :data="pageData"
                  tooltip-effect="dark"
                  class="el-datatable"
                  @@selection-change="handleSelectionChange"
                  :row-style="elTableRowSelectedStyle"
                  height="90%">
                  <el-table-column label="全选" type="selection" width="50"></el-table-column>
                  <el-table-column label="操作" width="180">
                      <template slot-scope="scope">
                          <!--这个是整行设置序号-->
                          <!--<span style="margin-left: 10px">{{scope.$index + 1}}</span>-->
                          <el-button @@click="editDialog(scope.row)" style="line-height:1vh" class="companyInfo-eltable-button" round type="primary">修改</el-button>
                      </template>
                  </el-table-column>
                  <el-table-column show-overflow-tooltip prop="recordId" label="编号" align="center"></el-table-column>
                  <el-table-column show-overflow-tooltip prop="largeGrainName" label="种粮大户姓名" align="center"></el-table-column>
                  <el-table-column show-overflow-tooltip prop="village" label="所属村子" align="center"></el-table-column>
                  <el-table-column show-overflow-tooltip prop="idCard" label="身份证号" align="center"></el-table-column>
                  <el-table-column show-overflow-tooltip prop="contactMobile" label="联系电话" align="center"></el-table-column>
                  <el-table-column show-overflow-tooltip prop="plantingArea" label="种植面积" align="center"></el-table-column>
                  <el-table-column show-overflow-tooltip prop="familyFarm" label="家庭农场" align="center"></el-table-column>
                  <el-table-column show-overflow-tooltip prop="coopeRative" label="合作社" align="center"></el-table-column>
                  <el-table-column show-overflow-tooltip prop="backup01" label="年份" align="center"></el-table-column>
                  <el-table-column show-overflow-tooltip prop="created" label="创建人" align="center"></el-table-column>
                  <el-table-column show-overflow-tooltip prop="createdTime" label="创建时间" align="center"></el-table-column>
                  <el-table-column show-overflow-tooltip prop="modifer" label="修改人" align="center"></el-table-column>
                  <el-table-column show-overflow-tooltip prop="modifedTime" label="修改时间" align="center"></el-table-column>
        </el-table>
    </el-row>
    <el-row class="page-cont search-page-container">
        <el-pagination class="el-pagination-center"
                       :total="recordCount"
                       :page-sizes="[10, 15, 20]"
                       :page-size="pageSize"
                       :page-count="pageCount"
                       :current-page="pageIndex"
                       @@current-change="changePage"
                       @@size-change="changePageSize"
                       layout="total, sizes, prev, pager, next, jumper">
         </el-pagination>
    </el-row>
    <el-dialog :visible.sync="editDialogIsShow" custom-class="LargeGrainDialog" title="编辑种粮大户信息">
        <div class="dialog">
            <div v-show="saveAction!='Edit'?false:true" class="line-container">
                <div class="label">
                    编号
                </div>
                <div class="input-container">
                    <el-input class="el-input-custom" :readonly="true" v-model="editModel.recordId" placeholder="编号" ></el-input>
                </div>
            </div>
            <div class="line-container">
                <div class="label-must">
                    种粮大户姓名
                </div>
                <div class="input-container">
                    <el-input class="el-input-custom" :readonly="false" v-model="editModel.largeGrainName" placeholder="种粮大户姓名" ></el-input>
                </div>
            </div>
            <div class="line-container">
                <div class="label-must">
                    所属村子
                </div>
                <div class="input-container">
                    <el-input class="el-input-custom" :readonly="false" v-model="editModel.village" placeholder="所属村子" ></el-input>
                </div>
            </div>
            <div class="line-container">
                <div class="label-must">
                    身份证号
                </div>
                <div class="input-container">
                    <el-input class="el-input-custom" :readonly="false" v-model="editModel.idCard" placeholder="身份证号" ></el-input>
                </div>
            </div>
            <div class="line-container">
                <div class="label-must">
                    联系电话
                </div>
                <div class="input-container">
                    <el-input class="el-input-custom" :readonly="false" v-model="editModel.contactMobile" placeholder="联系电话" ></el-input>
                </div>
            </div>
            <div class="line-container">
                <div class="label-must">
                    种植面积
                </div>
                <div class="input-container">
                    <el-input class="el-input-custom" :readonly="false" v-model="editModel.plantingArea" placeholder="种植面积" ></el-input>
                </div>
            </div>
            <div class="line-container">
                <div class="label">
                    家庭农场
                </div>
                <div class="input-container">
                    <el-input class="el-input-custom" :readonly="false" v-model="editModel.familyFarm" placeholder="家庭农场" ></el-input>
                </div>
            </div>
            <div class="line-container">
                <div class="label">
                    合作社
                </div>
                <div class="input-container">
                    <el-input class="el-input-custom" :readonly="false" v-model="editModel.coopeRative" placeholder="合作社" ></el-input>
                </div>
            </div>
            <div class="line-container">
                <div class="label">
                    年份
                </div>
                <div class="input-container">
                    <el-input class="el-input-custom" :readonly="false" v-model="editModel.backup01" placeholder="年份" ></el-input>
                </div>
            </div>
        </div>
        <div class="tips">
            注意:红字为必填项
        </div>
        <div class="control-container">
            <div class="btnSave" @@click="saveData">保存设置</div>
            <div class="btnClear" @@click="clearDialog">清空对话框</div>
        </div>
    </el-dialog>
    <el-dialog :visible.sync="importExcelLogDialog" custom-class="importExcelLogDialog" title="导入Excel日志" >
         <textarea class="txtLogArea">{{importExcelLogText}}</textarea>
    </el-dialog>
    <iframe :src="exportSrc==''?'about:blank':exportSrc" style="display:none"></iframe>
}
@section VueScript {
    <script>
        var main = new Vue({
            el: "#dataManage-main",
            data: {
                exportSrc:'',
                userName:'',
                userInfo:{
                    Account:'',
                    CompanyId:'',
                    Level:''
                },
                ddlFilterCriteriaSelectedStartValue:'',
                ddlFilterCriteriaSelectedEndValue:'',
                ddlFilterCriteriaOptions:[
                    {
                        value:'全部',
                        label:'全部'
                    },
                    {
                        value:'大于',
                        label:'大于'
                    },
                    {
                        value:'等于',
                        label:'等于'
                    },
                    {
                        value:'小于',
                        label:'小于'
                    },
                    {
                        value:'大于等于',
                        label:'大于等于'
                    },
                    {
                        value:'小于等于',
                        label:'小于等于'
                    }
                ],
                ddlSelectedYearSelectedValue:'',
                ddlSelectedYearOptions:[
                    {
                        value:'全部',
                        label:'全部'
                    }
                ],
                importExcelLogDialog:false,
                importExcelLogText:'',
                editModel:new LargeGrain(),
                editDialogIsShow:false,
                elTableSelectedRowId:'',
                searchPlantingAreaStart:'',
                searchPlantingAreaEnd:'',
                screenWidth:'',
                screenHeight:'',
                timestr:'',
                datestr:'',
                searchWhere:'',
                pageData:[],
                recordCount: 0,
                pageCount: 0,
                pageSize: 10,
                pageIndex: 1,
                sortField: 'ModifedTime',
                sortMethod: 'DESC',
                SelectionIDStr:'',
                saveAction:'Add',
                menuModels: [
                    {
                        name: '土地流转',
                        uri: 'http://localhost:17726'
                    },
                    {
                        name: '农田监测',
                        uri: '#'
                    },
                    {
                        name: '智慧农机',
                        uri: '#'
                    },
                    {
                        name: '农业专家',
                        uri: '#'
                    },
                    {
                        name: '深思大脑',
                        uri: '#'
                    }
                ],
                hideMenus:[],
                currentUrl:''
            },
            mounted: function() {
                this.screenWidth = document.body.clientWidth;
                this.screenHeight = document.body.clientHeight;
                if(!this.getToken()){
                   console.log("跳转");
                   window.location = "/Login/Index";
                   return false;
                }  
                window.onresize = () => {
                    return (() => {
                        this.screenWidth = document.body.clientWidth;
                        this.screenHeight = document.body.clientHeight;
                        this.elTableScroll();
                    })();
                };                
                this.getLargeGrainAllYear();
                this.getPageData();
                this.getLoginAccountUserInfo();
                this.userName=cookieHelper.get("loginUserName");
                this.showDateTimeClock();
                this.initModules();
            },
            methods: {
                initModules() {
                    var _that=this;
                    var modules=window.localStorage[_that.userName+'modules'];
                    if(modules==null||modules.length<=0||typeof(modules)=='undefined')
                    {
                        //apiHelper.getModules(
                        //    function(response){
                        //        _that.menuModels=response.data.result;
                        //        _that.fillMenuModelsArray();
                        //        window.localStorage.setItem(_that.userName+'modules',JSON.stringify(_that.menuModels));
                        //    }
                        //);
                        _that.readLocalModules();
                        _that.fillMenuModelsArray();
                    }
                    else
                    {
                        _that.menuModels=JSON.parse(modules);
                        _that.fillMenuModelsArray();
                    }
                },
                fillMenuModelsArray(){
                    var _that=this;
                    if(_that.menuModels==null||typeof(_that.menuModels)=="undefined"||_that.menuModels.length<5)
                        return false;
                    for(var i=6;i<_that.menuModels.length;i++){
                        if(_that.currentModelsId==_that.menuModels[i].id){
                            _that.menuModels[i].uri="#";
                        }
                        _that.hideMenus.push(_that.menuModels[i]);
                    }
                },
                readLocalModules() {
                    var _that = this;
                    $.getJSON(
                        "/MainMenuModels.json",
                        function (jsonData) {
                            console.log("readLocalModules");
                            console.log(jsonData);
                            _that.menuModels = jsonData.menuModels;
                            _that.readLocalHideMenus();
                        }
                    );
                },
                readLocalHideMenus() {
                    var _that = this;
                    $.getJSON(
                        "/HideMenus.json",
                        function (jsonData) {
                            console.log("readLocalHideMenus");
                            console.log(jsonData);
                            _that.hideMenus = jsonData.hideMenus;
                        }
                    );
                },
                saveData(){
                   var _that=this;
                   var checkEmptyMsg="";
                   var saveData=this.editModel;
                   var saveMethod=this.saveAction;
                   _that.getLoginAccountUserInfo();
                   if(saveData==null){
                       alert("数据不能为空");
                       return false;
                   }
                   if(saveMethod=="Eidt"&&saveData.recordId=="")
                      checkEmptyMsg+="记录编号不能为空、";
                   if(saveData.largeGrainName=="")
                      checkEmptyMsg+="种粮大户姓名、";
                   if(saveData.village=="")
                      checkEmptyMsg+="所属村子、";
                   if(saveData.idCard=="")
                      checkEmptyMsg+="身份证号、";
                   if(saveData.contactMobile=="")
                      checkEmptyMsg+="联系电话、";
                   if(saveData.plantingArea=="")
                      checkEmptyMsg+="种植面积、";
                   if(checkEmptyMsg!="")
                   {
                       checkEmptyMsg=checkEmptyMsg.substring(0,checkEmptyMsg.length-1);
                       alert("非空验证出错，原因["+checkEmptyMsg+"]");
                       return false;
                   }
                   saveData.created=_that.userInfo.Account;
                   saveData.modifer=_that.userInfo.Account;
                   console.log("saveData");
                   console.log(saveData);
                   switch(saveMethod)
                   {
                       case "Add":
                         apiHelper.addData(
                             saveData,
                             function(response){
                                 if(response.data.status==0){
                                     _that.pageIndex=1;
                                     _that.getPageData();
                                     _that.editDialogIsShow=false;
                                 }
                             }
                         );
                         break;
                       case "Edit":
                         apiHelper.edit(
                             saveData.recordId,
                             saveData,
                             function(response){
                                 if(response.data.status==0){
                                     _that.pageIndex=1;
                                     _that.getPageData();
                                     _that.editDialogIsShow=false;
                                 }
                             }
                         );
                         break;
                   }
                },
                importExcel(){
                    var _that=this;
                    var uploadExcel=$("#uploadExcel");
                    var file=null;
                    uploadExcel.click();
                    $("#uploadExcel").change(function(e){
                      console.log("#uploadExcel");
                      console.log(e);
                      if(e.target.files==null||e.target.files.length<=0){
                         alert('没有选择文件不能上传');
                         return false;
                      }
                      file=e.target.files[0];
                      if(file.size/1024/1024>_that.limitExcelFileSize){
                          alert("文件上传最大"+_that.limitExcelFileSize+"mb");
                          return false;
                      }
                      apiHelper.importExcel(
                          _that.userName,
                          "uploadExcel",
                          function(response){
                              console.log(response);
                              if(response.data.status!=0){
                                  _that.importExcelLogDialog=true;
                                  _that.importExcelLogText=response.data.msg;
                              }else if(response.data.status==0){
                                  alert("导入成功");
                                  _that.pageIndex=1;
                                  _that.getPageData();                                  
                              }
                          }
                      );
                    });         
                },
                selectedDelete(){
                    var _that=this;
                    if(_that.SelectionIDStr==""){
                        alert("请先选择要删除的数据");
                    }
                    if(confirm("确定要删除选中的数据吗?")){
                        apiHelper.delete(
                            _that.SelectionIDStr,
                            function(response){
                               if(response.data.status==0){
                                    _that.pageIndex = 1;
                                    _that.getPageData();
                               }
                            }
                        );
                    }
                },
                getLargeGrainAllYear(){
                    var _that=this;
                    _that.ddlSelectedYearOptions=[
                        {
                            value:'全部',
                            label:'全部'
                        }
                    ];
                    apiHelper.getLargeGrainAllYear(
                        function(response){
                            console.log("getLargeGrainAllYear");
                            console.log(response);
                            if (response.status == 0) {
                                var resultAry=response.result;
                                if(resultAry!=null&&resultAry.length!=null&&resultAry.length>0)
                                {
                                    for(var i=0;i<resultAry.length;i++)
                                    {
                                        _that.ddlSelectedYearOptions.push({
                                            value:resultAry[i],
                                            label:resultAry[i]
                                        });
                                    }
                                    console.log("ddlSelectedYearOptions");
                                    console.log(_that.ddlSelectedYearOptions);
                                }
                            }
                        });
                },
                showEditDialog(){
                    var _that=this;
                    _that.saveAction='Add';
                    _that.editDialogIsShow=true;
                },
                clearDialog(){
                    var _that=this;
                    _that.editModel=new LargeGrain(); 
                },
                search() {
                    this.pageIndex=1;
                    this.getPageData();
                },
                editDialog(row){
                    var _that=this;
                    _that.saveAction='Edit';
                    _that.editModel=row;
                    _that.editDialogIsShow=true;
                },
                handleSelectionChange(val){
                    var _that = this;
                    _that.SelectionIDStr = "";
                    for (var i = 0; i < val.length; i++) {
                        _that.SelectionIDStr += val[i].recordId + "-";
                    }
                    if (_that.SelectionIDStr != "")
                        _that.SelectionIDStr = _that.SelectionIDStr.substr(0, _that.SelectionIDStr.length - 1);
                },
                changePageSize(pageSize) {
                    this.pageIndex = 1;
                    this.pageSize = pageSize;
                    this.getPageData();
                },
                changePage(pageIndex) {
                    this.pageIndex = pageIndex;
                    this.getPageData();
                },
                exportExcel() {
                    var _that=this;
                    var selectedIDStr = _that.SelectionIDStr;
                    var searchWhere = _that.searchWhere;
                    var SelectedYearSelectedValue="0";
                    var searchPlantingAreaEnd="0";
                    var searchPlantingAreaStart="0";
                    var ddlFilterCriteriaSelectedStartValue="null";
                    var ddlFilterCriteriaSelectedEndValue="null";
                    if(_that.ddlSelectedYearSelectedValue!="全部"&&_that.ddlSelectedYearSelectedValue!='')
                       SelectedYearSelectedValue=_that.ddlSelectedYearSelectedValue;
                    if(_that.searchPlantingAreaEnd!='')
                       searchPlantingAreaEnd=_that.searchPlantingAreaEnd;
                    if(_that.searchPlantingAreaStart!='')
                       searchPlantingAreaStart=_that.searchPlantingAreaStart;
                    if(_that.searchWhere!="")
                       searchWhere=_that.searchWhere;
                    if(_that.ddlFilterCriteriaSelectedStartValue!='全部'&&_that.ddlFilterCriteriaSelectedStartValue!='')
                       ddlFilterCriteriaSelectedStartValue=_that.ddlFilterCriteriaSelectedStartValue;
                    if(_that.ddlFilterCriteriaSelectedEndValue!='全部'&&_that.ddlFilterCriteriaSelectedEndValue!='')
                       ddlFilterCriteriaSelectedEndValue=_that.ddlFilterCriteriaSelectedEndValue;
                    if (_that.recordCount <= 0) 
                    {
                        alert('没有数据不能导出');
                        return false;
                    }
                    _that.exportSrc = apiHelper.urlHost + '/large-grain/ExportExcel?selectedIDStr=' + selectedIDStr + '&where=' + searchWhere;
                    _that.exportSrc+="&year="+SelectedYearSelectedValue;
                    _that.exportSrc+="&plnatEndArea="+searchPlantingAreaEnd;
                    _that.exportSrc+="&plnatStartArea="+searchPlantingAreaStart;
                    _that.exportSrc+="&plnatAreaStartCondition="+ddlFilterCriteriaSelectedStartValue;
                    _that.exportSrc+="&plnatAreaEndCondition="+ddlFilterCriteriaSelectedEndValue;
                    console.log("exportExcel");
                    console.log(_that.exportSrc);
                },
                getPageData(){
                    var _that = this;
                    console.log("getPageData");
                    var SelectedYearSelectedValue="0";
                    var searchPlantingAreaEnd="0";
                    var searchPlantingAreaStart="0";
                    var ddlFilterCriteriaSelectedStartValue="null";
                    var ddlFilterCriteriaSelectedEndValue="null";
                    var searchWhere="null";
                    var ddlFilterCriteriaSelectedValue="null";
                    console.log("_that.ddlSelectedYearSelectedValue:"+_that.ddlSelectedYearSelectedValue);
                    if(_that.ddlSelectedYearSelectedValue!="全部"&&_that.ddlSelectedYearSelectedValue!='')
                       SelectedYearSelectedValue=_that.ddlSelectedYearSelectedValue;
                    if(_that.searchPlantingAreaEnd!='')
                       searchPlantingAreaEnd=_that.searchPlantingAreaEnd;
                    if(_that.searchPlantingAreaStart!='')
                       searchPlantingAreaStart=_that.searchPlantingAreaStart;
                    if(_that.searchWhere!="")
                       searchWhere=_that.searchWhere;
                    if(_that.ddlFilterCriteriaSelectedStartValue!='全部'&&_that.ddlFilterCriteriaSelectedStartValue!='')
                       ddlFilterCriteriaSelectedStartValue=_that.ddlFilterCriteriaSelectedStartValue;
                    if(_that.ddlFilterCriteriaSelectedEndValue!='全部'&&_that.ddlFilterCriteriaSelectedEndValue!='')
                       ddlFilterCriteriaSelectedEndValue=_that.ddlFilterCriteriaSelectedEndValue;
                    apiHelper.LargeGrainQueryPage({
                        where:searchWhere,
                        pageIndex :_that.pageIndex,
                        pageSize:_that.pageSize,
                        year:parseInt(SelectedYearSelectedValue),
                        plnatEndArea:parseInt(searchPlantingAreaEnd),
                        plnatStartArea:parseInt(searchPlantingAreaStart),
                        plnatAreaStartCondition:ddlFilterCriteriaSelectedStartValue,
                        plnatAreaEndCondition:ddlFilterCriteriaSelectedEndValue,
                        plnatAreaCondition:ddlFilterCriteriaSelectedValue,
                        sortField:_that.sortField,
                        sortMethod:_that.sortMethod
                    },function(response){
                        if (response.status == 0) {
                            _that.recordCount = response.recordCount;
                            _that.pageCount = response.pageCount;
                            _that.pageData = response.result;
                            console.log("_that.pageData");
                            console.log(_that.pageData);
                            console.log("_that.recordCount=" + _that.recordCount);
                            console.log("_that.pageCount=" + _that.pageCount);
                            console.log(_that.pageData);
                        }
                    });
                },
                elTableRowSelectedStyle({ row, rowIndex }) {
                    console.log(row);
                    if (this.elTableSelectedRowId == row.id) {
                        return {
                            "background-image": "linear-gradient(rgba(212, 81, 167, 0.69), rgba(0, 138, 255, 0.09), rgba(203, 38, 208, 0.53))",
                            "color": "#f4e9e9"
                        };
                    }
                },
                gotoNewHome() {
                    window.location = "/NewHome/NewHome?regionId=@LandId";
                },
                //el-table 动态计算高度为了显示滚动条
                elTableScroll() {
                    this.$nextTick(function() {
                        if ($(".el-table__body-wrapper").length > 0 && $(".el-table__header-wrapper").length > 0) {
                            $(".el-table__body-wrapper").each(function(index,element){
                                var parentElement = $(element).parent().parent();
                                var headerHeight = $(element).prev()[0].offsetHeight;
                                var parentHeight = parentElement[0].offsetHeight;
                                var elBodyHeight = parentHeight - headerHeight;
                                $(element).css("height", elBodyHeight + "px");
                                console.log("headerHeight:" + headerHeight);
                                console.log("parentHeight:" + parentHeight);
                                console.log("elBodyHeight:" + elBodyHeight);
                                console.log("parentElement");
                                console.log(parentElement);
                            });
                        }
                    });
                },
                getCookie(cookieName) {
                    var cookieString = document.cookie;
                    var start = cookieString.indexOf(cookieName + '=');
                    // 加上等号的原因是避免在某些 Cookie 的值里有
                    // // 与 cookieName 一样的字符串。
                    if (start == -1) // 找不到
                        return null;
                    start += cookieName.length + 1;
                    var end = cookieString.indexOf(';', start);
                    if (end == -1)
                        return unescape(cookieString.substring(start));
                    return unescape(cookieString.substring(start, end));
               },
               showDateTimeClock() {
                   var _that = this;
                   window.setTimeout(function() {
                       var nowDate = new Date();
                       var hours = _that.fixLeadingZero(nowDate.getHours(), 2);
                       var minutes = _that.fixLeadingZero(nowDate.getMinutes(), 2);
                       var seconds = _that.fixLeadingZero(nowDate.getSeconds(), 2);
                       var month = _that.fixLeadingZero(nowDate.getMonth() + 1, 2);
                       var day = _that.fixLeadingZero(nowDate.getDay() + 1, 2);
                       _that.timestr = hours + ":" + minutes + ":" + seconds;
                       _that.datestr = nowDate.getFullYear() + "/" + month + "/" + day;
                       $(".time-text").html(_that.timestr);
                       $(".date-text").html(_that.datestr);
                       _that.showDateTimeClock();
                   }, 1000);
               },
               fixLeadingZero(value, fixLength) {
                   var str = value.toString();
                   if (str.length < fixLength) {
                       var len = fixLength - str.length;
                       var tempStr = "";
                       for (var i = 0; i < len; i++)
                            tempStr += "0";
                       str = tempStr + str;
                   }
                   return str;
               },
               getLoginAccountUserInfo() {
                   this.userInfo.Account = apiHelper.getCookie("account");
                   this.userInfo.CompanyId = apiHelper.getCookie("companyId");
                   this.userInfo.Level = apiHelper.getCookie("level");
                   this.userName = this.userInfo.Account;
                   $("#userName").html(this.userName);
                   console.log("getLoginAccountUserInfo");
                   console.log("userName="+this.userName);
               },
               getToken() {
                   this.getLoginAccountUserInfo();
                   var token = apiHelper.getCookie("token");
                   var level = apiHelper.getCookie("level");
                   var result = true;
                   if (this.userInfo.Account == null) {
                       result = false;
                   } else {
                       apiHelper.token = token;
                       apiHelper.level = level;
                       console.log("apiHelper.level="+apiHelper.level);
                       if(apiHelper.level>3){
                           alert('用户权限不足');
                           result=false;
                       }
                   }
                   return result;
               },
               showMoreMenu(){
                   if ($(".pop-more-maste-menu").css("display") == "none")
                       $(".pop-more-maste-menu").show();
               },
               hideMoreMenu(){
                   if ($(".pop-more-maste-menu").css("display") != "none")
                       $(".pop-more-maste-menu").hide();
               },
               //退出登录，取消cookie有效时间
               exitLogin() {
                   console.log(123);
                   var exp = new Date();
                   exp.setTime(exp.getTime()-10);
                   document.cookie = "token=" + escape('echo') + ";expires=" + exp.toGMTString() + ";path=/";
                   window.localStorage.removeItem(this.userName+'modules');
                   window.location = "/Login/Index";
               }
            }
        });
    </script>
}